import random

class WordGame():
    def __init__(self, rounds: int):
        self.wins1 = 0
        self.wins2 = 0
        self.rounds = rounds

    def round_winner(self, player1_word: str, player2_word: str):
        # determine a random winner
        return random.randint(1, 2)

    def play(self):
        print("Word game:")
        for i in range(1, self.rounds+1):
            print(f"round {i}")
            answer1 = input("player1: ")
            answer2 = input("player2: ")

            if self.round_winner(answer1, answer2) == 1:
                self.wins1 += 1
                print("player 1 won")
            elif self.round_winner(answer1, answer2) == 2:
                self.wins2 += 1
                print("player 2 won")
            else:
                pass # it's a tie

        print("game over, wins:")
        print(f"player 1: {self.wins1}")
        print(f"player 2: {self.wins2}")


class LongestWord(WordGame):
    def __init__(self, rounds: int):
        super().__init__(rounds)

    def round_winner(self, player1_word: str, player2_word: str):
        if len(player1_word) > len(player2_word):
            return 1  # Player 1 wins
        elif len(player2_word) > len(player1_word):
            return 2  # Player 2 wins
        

class MostVowels(WordGame):
    def __init__(self, rounds: int):
        super().__init__(rounds)

    def round_winner(self, player1_word: str, player2_word: str):
        word1_list = []
        word2_list = []
        for chars in player1_word:
            if chars.lower() in ('a', 'e', 'i', 'o', 'u'):
                word1_list.append(chars)
        for chars in player2_word:
            if chars.lower() in ('a', 'e', 'i', 'o', 'u'):
                word2_list.append(chars)
        if len(word1_list) > len(word2_list):
            return 1
        elif len(word2_list) > len(word1_list):
            return 2
                
class RockPaperScissors(WordGame):
    def __init__(self, rounds: int):
        super().__init__(rounds)

    def round_winner(self, player1_word: str, player2_word: str):
        choices = {"rock" : 0, "paper": 1, "scissors": 2}
        # Not good first
        if player1_word not in choices.keys() and player2_word not in choices.keys():
            return 0
 
        if player1_word not in choices.keys():
            return 2
 
        if player2_word not in choices.keys():
            return 1
 
        difference = choices[player1_word] - choices[player2_word]
        
        if difference == 0:
            return 0
 #e.g., if player1 chooses rock (0) and player 2 chooses scissors(2) it will be -2 
            return 1
        if difference == 1 or difference == -2: 
 
        return 2
